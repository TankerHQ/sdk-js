include:
  - project: TankerHQ/gitlab-ci-files
    file: /common.yml
    ref: fe9dc0a8b010779f85ef0dbec49e572728b06bd4

stages:
  - check
  - bridge-check
  - bench
  - deploy

default:
  image: registry.gitlab.com/tankerhq/docker/node:ab-nove-release-cli-to-base.639
  before_script:
    - poetry -V
    - node -v
    - poetry install
    - poetry run python --version

check/lint:
  stage: check
  rules:
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/push-master-or-feat, rules]
    - !reference [.rules/nightly, rules]
  script:
    - poetry run black --check run-ci.py
    - poetry run flake8 run-ci.py
    - poetry run mypy
    - poetry run python run-ci.py lint
  tags:
    - linux

check/linux/chrome:
  stage: check
  rules:
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/push-master-or-feat, rules]
    - !reference [.rules/nightly, rules]
  script:
    - poetry run python run-ci.py check --runner linux
  tags:
    - linux

.check/linux/node-base:
  stage: check
  script:
    - /usr/local/nvm/nvm-exec poetry run python run-ci.py check --runner node
    - mv coverage/lcov-report lcov-report
  artifacts:
    paths:
      - lcov-report/
    expire_in: 7 days
  tags:
    - linux

check/linux/node:
  extends:
    - .check/linux/node-base
  rules:
    - !reference [.rules/push-master, rules]
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/nightly, rules]
  variables:
    NODE_VERSION: 14

check/linux/node-lts:
  extends:
    - .check/linux/node-base
  rules:
    - !reference [.rules/push-master, rules]
    - !reference [.rules/mr/manual, rules]
    - !reference [.rules/nightly, rules]
  variables:
    NODE_VERSION: 12

check/linux/node-next:
  extends:
    - .check/linux/node-base
  rules:
    - !reference [.rules/push-master, rules]
    - !reference [.rules/mr/manual, rules]
    - !reference [.rules/nightly, rules]
  variables:
    NODE_VERSION: 16

check/macos:
  stage: check
  rules:
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/push-master-or-feat, rules]
    - !reference [.rules/nightly, rules]
  script:
    - poetry run python run-ci.py check --runner macos
  tags:
    - macos
    - MacOSSlave-2

check/macos/nightly:
  stage: check
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py check --runner macos --nightly
  tags:
    - macos
    - MacOSSlave-2

.check/windows:
  stage: check
  tags:
    - windows
    - tanker

check/windows/edge:
  extends:
    - .check/windows
  rules:
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/push-master-or-feat, rules]
    - !reference [.rules/nightly, rules]
  script:
    - poetry run python run-ci.py check --runner windows-edge

check/windows/ie:
  extends:
    - .check/windows
  rules:
    - !reference [.rules/push-master, rules]
    - !reference [.rules/nightly, rules]
    - !reference [.rules/mr/manual, rules]
  script:
    - poetry run python run-ci.py check --runner windows-ie

check/linux/nightly:
  extends:
    - .rules/nightly
  stage: check
  script:
    - poetry run python run-ci.py check --runner linux --nightly
  tags:
    - linux
  # This job can run on a shared runner, which can be slow.
  timeout: 1 hours 30 minutes

# Benchmark jobs are pinned on a machine to have more consistent results.

bench/linux:
  extends: .rules/mr/manual
  stage: bench
  needs: []
  script:
    - poetry run python run-ci.py benchmark --runner linux --compare-results --iterations 30
  tags:
    - LinuxSlave-3

bench/linux/nightly:
  stage: bench
  needs: []
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py benchmark --runner linux --upload-results --iterations 100
  tags:
    - LinuxSlave-3

bench/macos:
  extends: .rules/mr/manual
  stage: bench
  needs: []
  script:
    - poetry run python run-ci.py benchmark --runner macos --compare-results --iterations 25
  tags:
    - MacOSSlave-2

bench/macos/nightly:
  stage: bench
  needs: []
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py benchmark --runner macos --upload-results --iterations 100
  tags:
    - MacOSSlave-2

bench/windows:
  extends: .rules/mr/manual
  stage: bench
  needs: []
  script:
    - poetry run python run-ci.py benchmark --runner windows-edge --compare-results --iterations 25
  tags:
    - WindowsSlave-2

bench/windows/nightly:
  stage: bench
  needs: []
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py benchmark --runner windows-edge --upload-results --iterations 100
  tags:
    - WindowsSlave-2

pages:
  extends: .rules/push-master-or-feat
  stage: deploy
  dependencies:
    - check/linux/node
  script:
    - mv lcov-report/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days
  tags:
    - linux
  variables:
    GIT_STRATEGY: none

bridge/compat:
  stage: bridge-check
  extends:
    - .variables/bridge-common
  rules:
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
  needs:
    - check/linux/node
  trigger:
    project: TankerHQ/compatibility-tests
    strategy: depend

check/e2e:
  stage: check
  rules:
    - !reference [.rules/mr/manual, rules]
    - !reference [.rules/nightly, rules]
  script:
    - poetry run python run-ci.py e2e
  tags:
    - linux
    - tanker
  image: registry.gitlab.com/tankerhq/docker/e2e:latest

audit:
  extends:
    - .rules/nightly
  stage: check
  script:
    - yarn
    - yarn audit
  tags:
    - linux

deploy:
  stage: deploy
  extends:
    - .rules/deploy/js
    - .tags/linux
  script:
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > "${HOME}/.npmrc"
    - poetry run python run-ci.py deploy --version "${SDK_JS_RELEASE_VERSION}"
  release:
    description: sdk-js v${SDK_JS_RELEASE_VERSION}
    tag_name: v${SDK_JS_RELEASE_VERSION}

test/deployed:
  stage: deploy
  needs:
    - deploy
  extends:
    - .rules/deploy/js
    - .tags/linux
  script:
    - poetry run python run-ci.py test-deploy --version "${SDK_JS_RELEASE_VERSION}"
