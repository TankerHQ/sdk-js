include:
  - project: TankerHQ/gitlab-ci-files
    file: /cache.yml
    ref: 2021-09-01-1
  - project: TankerHQ/gitlab-ci-files
    file: /common.yml
    ref: 2021-09-01-1

stages:
  - check
  - bridge-check
  - bench
  - deploy

default:
  image: registry.gitlab.com/tankerhq/docker/node:latest
  before_script:
    - poetry -V
    - node -v
    - poetry install
    - poetry run python --version

check/linux/chrome:
  extends:
    - .python-yarn-cache
    - .rules/mr/auto
  stage: check
  script:
    - poetry run python run-ci.py check --runner linux
  tags:
    - linux

.check/linux/node-base:
  extends:
    - .python-yarn-cache
  stage: check
  script:
    - /usr/local/nvm/nvm-exec poetry run python run-ci.py check --runner node
    - mv coverage/lcov-report lcov-report
  artifacts:
    paths:
      - lcov-report/
    expire_in: 7 days
  tags:
    - linux

check/linux/node:
  extends:
    - .check/linux/node-base
  rules:
    - !reference [.rules/mr/auto, rules]
  variables:
    NODE_VERSION: 14

check/linux/node-lts:
  extends:
    - .check/linux/node-base
    - .rules/mr/manual/nightly/auto
  rules:
    - !reference [.rules/master/nightly, rules]
    - !reference [.rules/mr/manual, rules]
  variables:
    NODE_VERSION: 12

check/linux/node-next:
  extends:
    - .check/linux/node-base
    - .rules/mr/manual/nightly/auto
  rules:
    - !reference [.rules/master/nightly, rules]
    - !reference [.rules/mr/manual, rules]
  variables:
    NODE_VERSION: 16

check/macos:
  extends:
    - .rules/mr/auto
    # NOTE: This job doesn't have .python-yarn-cache. Is this right?
  stage: check
  script:
    - poetry run python run-ci.py check --runner macos
  tags:
    - macos
    - MacOSSlave-2

check/macos/nightly:
  stage: check
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py check --runner macos --nightly
  tags:
    - macos
    - MacOSSlave-2

.check/windows:
  stage: check
  tags:
    - windows
    - tanker

check/windows/edge:
  extends:
    - .check/windows
    - .rules/mr/auto/nightly
  script:
    - poetry run python run-ci.py check --runner windows-edge

check/windows/ie:
  extends:
    - .check/windows
    - .rules/master/nightly
  script:
    - poetry run python run-ci.py check --runner windows-ie

check/windows/ie/manual:
  extends:
    - .check/windows
    - .rules/mr/manual
  script:
    - poetry run python run-ci.py check --runner windows-ie

check/linux/nightly:
  extends:
    - .python-yarn-cache
    - .rules/nightly
  stage: check
  script:
    - poetry run python run-ci.py check --runner linux --nightly
  tags:
    - linux
  # This job can run on a shared runner, which can be slow.
  timeout: 1 hours 30 minutes

# Benchmark jobs are pinned on a machine to have more consistent results.

bench/linux:
  extends: .rules/mr/manual
  stage: bench
  needs: []
  script:
    - poetry run python run-ci.py benchmark --runner linux --compare-results --iterations 30
  tags:
    - LinuxSlave-3

bench/linux/nightly:
  stage: bench
  needs: []
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py benchmark --runner linux --upload-results --iterations 100
  tags:
    - LinuxSlave-3

bench/macos:
  extends: .rules/mr/manual
  stage: bench
  needs: []
  script:
    - poetry run python run-ci.py benchmark --runner macos --compare-results --iterations 25
  tags:
    - MacOSSlave-2

bench/macos/nightly:
  stage: bench
  needs: []
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py benchmark --runner macos --upload-results --iterations 100
  tags:
    - MacOSSlave-2

bench/windows:
  extends: .rules/mr/manual
  stage: bench
  needs: []
  script:
    - poetry run python run-ci.py benchmark --runner windows-edge --compare-results --iterations 25
  tags:
    - WindowsSlave-2

bench/windows/nightly:
  stage: bench
  needs: []
  extends: .rules/nightly
  script:
    - poetry run python run-ci.py benchmark --runner windows-edge --upload-results --iterations 100
  tags:
    - WindowsSlave-2

deploy/sdk:
  stage: deploy
  extends:
    - .python-yarn-cache
    - .rules/deploy/js
  script:
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > "${HOME}/.npmrc"
    - poetry run python run-ci.py deploy --git-tag "${CI_COMMIT_TAG}"
  tags:
    - linux

pages:
  extends: .rules/pages
  stage: deploy
  dependencies:
    - check/linux/node
  script:
    - mv lcov-report/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days
  tags:
    - linux

bridge/compat:
  stage: bridge-check
  extends:
    - .rules/bridge-ci/auto
    - .variables/bridge-common
  needs:
    - check/linux/node
  trigger:
    project: TankerHQ/compatibility-tests
    strategy: depend

check/e2e:
  extends:
    - .rules/mr/manual/nightly/auto
  stage: check
  script:
    - poetry run python run-ci.py e2e
  tags:
    - linux
    - tanker
  image: registry.gitlab.com/tankerhq/docker/e2e:latest

audit:
  extends:
    - .yarn-cache
    - .rules/nightly
  stage: check
  script:
    - yarn
    - yarn audit
  tags:
    - linux
